"use strict"

#
#   all the tests stuff my dear old chap
#

FILE_NAME = 'test.coffee'

grunt = require "grunt"
report = require './report'
util = require './util'

_tests = {}

_conditions =
  INCLUDED: 'included'
  EXCLUDED: 'excluded'

_statuses =
  FAIL: 'failed'
  SUCCESS: 'success'

_testExclusion = (file, pattern) ->
  if file.findLineNumbers(pattern)
    return _statuses.FAIL
  _statuses.SUCCESS

_testInclusion = (file, test) ->
  lineNumbers = file.findLineNumbers(test.pattern)
  if lineNumbers
    if test.lines
      if lineNumbers.equals(test.lines)
        return _statuses.SUCCESS
      else
        return _statuses.FAIL
    return _statuses.SUCCESS
  _statuses.FAIL

_executeTest = ( testname, variation, test, file, taskOptions ) ->

  switch test.condition
    when _conditions.EXCLUDED then testStatus = _testExclusion(file, test.pattern)
    else
      testStatus = _testInclusion(file, test)

  test.status = testStatus

  grunt.log.debug '_executeTest: test ' + test.name + ' has the status "' + testStatus + '" for ' + file.getFileName()

  lineNumbers = file.findLineNumbers(test.pattern)
  report.set(file, testname, taskOptions, lineNumbers)

#
# public methods
#

registerTest = ( testName, test ) ->
  test.name = testName
#  grunt.log.debug 'Registered test ' + JSON.stringify(test)

# execute _tests on given file
# @param  object  file  fileObject generated by file.coffee
# @param  array|undefined _tests contains the _tests name to be executed of all if undefined
executeTests = ( file, options ) ->
  tests = options.tests
  for testName, test of tests
    registerTest(testName, test)
#    grunt.log.debug 'Found test ' + testName + ' with the parameters ' + JSON.stringify(test)
    _executeTest testName, false, test, file, options

# export the modules
module.exports =
  registerTest: registerTest
  executeTests: executeTests
  tests: _tests
